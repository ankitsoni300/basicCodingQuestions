import Foundation

class Node{
    var value : Int
    var leftNode : Node?
    var rightNode : Node?
    
    init(value : Int) {
        self.value = value
    }
}

class BinaryTree{
    var root : Node?
    
    func getLevel(node : Node?, data : Int, level : Int) -> Int {
        if node == nil{
            return 0
        }
        if node?.value == data{
            return level
        }
        var downlevel = getLevel(node: node?.leftNode, data: data, level: level + 1)
        if downlevel != 0{
            return downlevel
        }
        
        downlevel = getLevel(node: node?.rightNode, data: data, level: level + 1)
        
        return downlevel
    }
    
}

let treeNode = BinaryTree()
treeNode.root = Node(value: 1)
treeNode.root?.leftNode = Node(value: 2)
treeNode.root?.rightNode = Node(value: 3)
treeNode.root?.leftNode?.leftNode = Node(value: 4)
treeNode.root?.leftNode?.rightNode = Node(value: 5)
treeNode.root?.leftNode?.leftNode?.leftNode = Node(value: 6)

treeNode.getLevel(node: treeNode.root, data: 6, level: 1)
